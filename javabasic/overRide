// A Simple Java program to demonstrate 
// method overriding in java 

// Base Class 
class Parent 
{ 
	void show() { System.out.println("Parent's show()"); } 
} 

// Inherited class 
class Child extends Parent 
{ 
	// This method overrides show() of Parent 
	@Override
	void show() { System.out.println("Child's show()"); } 
} 

// Driver class 
class Main 
{ 
	public static void main(String[] args) 
	{ 
		// If a Parent type reference refers 
		// to a Parent object, then Parent's 
		// show is called 
		Parent obj1 = new Parent(); 
		obj1.show(); 

		// If a Parent type reference refers 
		// to a Child object Child's show() 
		// is called. This is called RUN TIME 
		// POLYMORPHISM. 
		Parent obj2 = new Child(); 
		obj2.show(); 
	} 
} 
----------------------------------------------------------------------------------------------------------------------------

/* Java program to show that if static method is redefined by 
a derived class, then it is not overriding,it is hiding */

class Parent 
{ 
	// Static method in base class which will be hidden in subclass 
	static void m1() { System.out.println("From parent static m1()");} 
	
	// Non-static method which will be overridden in derived class 
	void m2() { System.out.println("From parent non-static(instance) m2()"); } 
} 

class Child extends Parent 
{ 
	// This method hides m1() in Parent 
	static void m1() { System.out.println("From child static m1()");} 
	
	// This method overrides m2() in Parent 
	@Override
	public void m2() { System.out.println("From child non-static(instance) m2()");} 
	
} 

// Driver class 
class Main 
{ 
	public static void main(String[] args) 
	{ 
		Parent obj1 = new Child(); 
		
		// As per overriding rules this should call to class Child static 
		// overridden method. Since static method can not be overridden, it 
		// calls Parent's m1() 
		obj1.m1(); 
	
		// Here overriding works and Child's m2() is called 
		obj1.m2(); 
	} 
} 

---------------------------------------------------------------------------------------------------------------------
package vinRaikar;

class Animal
	{
	
	public void print() {
		System.out.println("hi animal");
	}
	
	}

class Dog extends Animal{
	
	public void print11()
	{
		System.out.println("hi dog");
	}
}
public class overrRideExample {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		Animal np=new Animal();
		np.print();
		Dog lo = new Dog();
		lo.print();
		//Animal li = new Dog();
		//li.print();
		((Dog)np).print();
	}

}
